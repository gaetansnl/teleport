// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.17.3
// source: v1/cluster.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Cluster describes cluster fields
type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the cluster name
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// Connected indicates if connection to the cluster has been established
	Connected bool `protobuf:"varint,2,opt,name=Connected,proto3" json:"Connected,omitempty"`
	// ACL is the cluster aCL
	ACL *ACL `protobuf:"bytes,3,opt,name=ACL,proto3" json:"ACL,omitempty"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_v1_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *Cluster) GetACL() *ACL {
	if x != nil {
		return x.ACL
	}
	return nil
}

// Access describes access verbs
type Access struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List determines "list" access
	List bool `protobuf:"varint,1,opt,name=List,proto3" json:"List,omitempty"`
	// Read determines "read" access
	Read bool `protobuf:"varint,2,opt,name=Read,proto3" json:"Read,omitempty"`
	// Edit determines "edit" access
	Edit bool `protobuf:"varint,3,opt,name=Edit,proto3" json:"Edit,omitempty"`
	// Create determines "create" access
	Create bool `protobuf:"varint,4,opt,name=Create,proto3" json:"Create,omitempty"`
	// Delete determines "delete" access
	Delete bool `protobuf:"varint,5,opt,name=Delete,proto3" json:"Delete,omitempty"`
}

func (x *Access) Reset() {
	*x = Access{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Access) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Access) ProtoMessage() {}

func (x *Access) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Access.ProtoReflect.Descriptor instead.
func (*Access) Descriptor() ([]byte, []int) {
	return file_v1_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *Access) GetList() bool {
	if x != nil {
		return x.List
	}
	return false
}

func (x *Access) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *Access) GetEdit() bool {
	if x != nil {
		return x.Edit
	}
	return false
}

func (x *Access) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

func (x *Access) GetDelete() bool {
	if x != nil {
		return x.Delete
	}
	return false
}

// ACL is the access control list of the user
type ACL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sessions defines access to recorded sessions
	Sessions *Access `protobuf:"bytes,1,opt,name=Sessions,proto3" json:"Sessions,omitempty"`
	// AuthConnectors defines access to auth.connectors
	AuthConnectors *Access `protobuf:"bytes,2,opt,name=AuthConnectors,proto3" json:"AuthConnectors,omitempty"`
	// Roles defines access to roles
	Roles *Access `protobuf:"bytes,3,opt,name=Roles,proto3" json:"Roles,omitempty"`
	// Users defines access to users.
	Users *Access `protobuf:"bytes,4,opt,name=Users,proto3" json:"Users,omitempty"`
	// TrustedClusters defines access to trusted clusters
	TrustedClusters *Access `protobuf:"bytes,5,opt,name=TrustedClusters,proto3" json:"TrustedClusters,omitempty"`
	// Events defines access to audit logs
	Events *Access `protobuf:"bytes,6,opt,name=Events,proto3" json:"Events,omitempty"`
	// Tokens defines access to tokens.
	Tokens *Access `protobuf:"bytes,7,opt,name=Tokens,proto3" json:"Tokens,omitempty"`
	// Servers defines access to servers.
	Servers *Access `protobuf:"bytes,8,opt,name=Servers,proto3" json:"Servers,omitempty"`
	// AppServers defines access to application servers
	AppServers *Access `protobuf:"bytes,9,opt,name=AppServers,proto3" json:"AppServers,omitempty"`
	// DBServers defines access to database servers.
	DBServers *Access `protobuf:"bytes,10,opt,name=DBServers,proto3" json:"DBServers,omitempty"`
	// KubeServers defines access to kubernetes servers.
	KubeServers *Access `protobuf:"bytes,11,opt,name=KubeServers,proto3" json:"KubeServers,omitempty"`
	// SSH defines access to servers
	SSHLogins []string `protobuf:"bytes,12,rep,name=SSHLogins,proto3" json:"SSHLogins,omitempty"`
	// AccessRequests defines access to access requests
	AccessRequests *Access `protobuf:"bytes,13,opt,name=AccessRequests,proto3" json:"AccessRequests,omitempty"`
	// Billing defines access to billing information
	Billing *Access `protobuf:"bytes,14,opt,name=Billing,proto3" json:"Billing,omitempty"`
}

func (x *ACL) Reset() {
	*x = ACL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACL) ProtoMessage() {}

func (x *ACL) ProtoReflect() protoreflect.Message {
	mi := &file_v1_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACL.ProtoReflect.Descriptor instead.
func (*ACL) Descriptor() ([]byte, []int) {
	return file_v1_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *ACL) GetSessions() *Access {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ACL) GetAuthConnectors() *Access {
	if x != nil {
		return x.AuthConnectors
	}
	return nil
}

func (x *ACL) GetRoles() *Access {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ACL) GetUsers() *Access {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ACL) GetTrustedClusters() *Access {
	if x != nil {
		return x.TrustedClusters
	}
	return nil
}

func (x *ACL) GetEvents() *Access {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ACL) GetTokens() *Access {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ACL) GetServers() *Access {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ACL) GetAppServers() *Access {
	if x != nil {
		return x.AppServers
	}
	return nil
}

func (x *ACL) GetDBServers() *Access {
	if x != nil {
		return x.DBServers
	}
	return nil
}

func (x *ACL) GetKubeServers() *Access {
	if x != nil {
		return x.KubeServers
	}
	return nil
}

func (x *ACL) GetSSHLogins() []string {
	if x != nil {
		return x.SSHLogins
	}
	return nil
}

func (x *ACL) GetAccessRequests() *Access {
	if x != nil {
		return x.AccessRequests
	}
	return nil
}

func (x *ACL) GetBilling() *Access {
	if x != nil {
		return x.Billing
	}
	return nil
}

var File_v1_cluster_proto protoreflect.FileDescriptor

var file_v1_cluster_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x68, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x41, 0x43, 0x4c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x43, 0x4c, 0x52, 0x03, 0x41,
	0x43, 0x4c, 0x22, 0x74, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0xaf, 0x06, 0x0a, 0x03, 0x41, 0x43, 0x4c,
	0x12, 0x38, 0x0a, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x08, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x32, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x05, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x46, 0x0a, 0x0f, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x0f, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x34, 0x0a, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x06,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x09, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x3e,
	0x0a, 0x0b, 0x4b, 0x75, 0x62, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x0b, 0x4b, 0x75, 0x62, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x53, 0x48, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x53, 0x48, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x0e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x0e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f,
	0x6c, 0x69, 0x62, 0x2f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_cluster_proto_rawDescOnce sync.Once
	file_v1_cluster_proto_rawDescData = file_v1_cluster_proto_rawDesc
)

func file_v1_cluster_proto_rawDescGZIP() []byte {
	file_v1_cluster_proto_rawDescOnce.Do(func() {
		file_v1_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_cluster_proto_rawDescData)
	})
	return file_v1_cluster_proto_rawDescData
}

var file_v1_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_cluster_proto_goTypes = []interface{}{
	(*Cluster)(nil), // 0: teleport.terminal.v1.Cluster
	(*Access)(nil),  // 1: teleport.terminal.v1.Access
	(*ACL)(nil),     // 2: teleport.terminal.v1.ACL
}
var file_v1_cluster_proto_depIdxs = []int32{
	2,  // 0: teleport.terminal.v1.Cluster.ACL:type_name -> teleport.terminal.v1.ACL
	1,  // 1: teleport.terminal.v1.ACL.Sessions:type_name -> teleport.terminal.v1.Access
	1,  // 2: teleport.terminal.v1.ACL.AuthConnectors:type_name -> teleport.terminal.v1.Access
	1,  // 3: teleport.terminal.v1.ACL.Roles:type_name -> teleport.terminal.v1.Access
	1,  // 4: teleport.terminal.v1.ACL.Users:type_name -> teleport.terminal.v1.Access
	1,  // 5: teleport.terminal.v1.ACL.TrustedClusters:type_name -> teleport.terminal.v1.Access
	1,  // 6: teleport.terminal.v1.ACL.Events:type_name -> teleport.terminal.v1.Access
	1,  // 7: teleport.terminal.v1.ACL.Tokens:type_name -> teleport.terminal.v1.Access
	1,  // 8: teleport.terminal.v1.ACL.Servers:type_name -> teleport.terminal.v1.Access
	1,  // 9: teleport.terminal.v1.ACL.AppServers:type_name -> teleport.terminal.v1.Access
	1,  // 10: teleport.terminal.v1.ACL.DBServers:type_name -> teleport.terminal.v1.Access
	1,  // 11: teleport.terminal.v1.ACL.KubeServers:type_name -> teleport.terminal.v1.Access
	1,  // 12: teleport.terminal.v1.ACL.AccessRequests:type_name -> teleport.terminal.v1.Access
	1,  // 13: teleport.terminal.v1.ACL.Billing:type_name -> teleport.terminal.v1.Access
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_v1_cluster_proto_init() }
func file_v1_cluster_proto_init() {
	if File_v1_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Access); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_cluster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_cluster_proto_goTypes,
		DependencyIndexes: file_v1_cluster_proto_depIdxs,
		MessageInfos:      file_v1_cluster_proto_msgTypes,
	}.Build()
	File_v1_cluster_proto = out.File
	file_v1_cluster_proto_rawDesc = nil
	file_v1_cluster_proto_goTypes = nil
	file_v1_cluster_proto_depIdxs = nil
}
